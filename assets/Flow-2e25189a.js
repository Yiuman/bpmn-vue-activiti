import{g as m,E as s,D as c,C as a}from"./common-feaf5c18.js";import{P as f}from"./PrefixLabelSelect-5f24b42c.js";import{c as l,E,F as g,a as x,b as F,B as i}from"./index-aca51933.js";const P=[{label:"普通顺序流",value:"normal"},{label:"默认顺序流",value:"default"},{label:"条件顺序流",value:"condition"}],d=e=>{var o;return e!=null&&e.conditionExpression?"condition":(o=e==null?void 0:e.sourceRef)!=null&&o.default?"default":"normal"},S={...a,properties:{...a.properties,"sequenceFlow.type":{component:f,prefixTitle:"顺序流类型",predicate:e=>{var o;return((o=e==null?void 0:e.sourceRef)==null?void 0:o.$type)!=="bpmn:StartEvent"},vSlots:{default:()=>l(g,null,[P.map(e=>l(E,e,null))])},getValue(e){return d(e)},setValue(e,o,n){const t=i,r=t.getShape(),u=t.getModeler().get("elementRegistry").get(r.businessObject.sourceRef.id),p=t.getModeling();(!n||n==="normal")&&(p.updateProperties(r,{conditionExpression:null}),delete r.businessObject.conditionExpression),n==="default"&&(p.updateProperties(u,{default:r}),delete r.businessObject.conditionExpression),n==="condition"&&p.updateProperties(r,{conditionExpression:t.getModeler().get("moddle").create("bpmn:FormalExpression")})}},"conditionExpression.body":{component:x,placeholder:"条件表达式",vSlots:{prepend:()=>l("div",null,[F("条件表达式")])},predicate:e=>d(e)==="condition",getValue(e){var o;return((o=e==null?void 0:e.conditionExpression)==null?void 0:o.body)??""},setValue(e,o,n){const t=i,r=t.getModeler().get("moddle");t.updateProperties(t.getShape(),{conditionExpression:r.create("bpmn:FormalExpression",{body:n})})}}}},V={"bpmn:SequenceFlow":[S,m({name:"条件监听器",eventOptions:[{label:"take",value:"take"}]}),s,c]};export{V as default};
